@import 'tailwindcss';
@plugin '@tailwindcss/typography';

@custom-variant dark (&:where(.dark, .dark *));

@layer theme {
	:root {
		--font-sans:
			'Source Sans 3 Variable', ui-sans-serif, system-ui, sans-serif,
			'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
			'Noto Color Emoji';
		--font-serif:
			'Source Serif 4 Variable', ui-serif, Georgia, Cambria, 'Times New Roman',
			Times, serif;
		--font-mono:
			'Source Code Pro Variable', ui-monospace, SFMono-Regular, 'SF Mono', Menlo,
			Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
	}
}

@layer utilities {
	@keyframes steamFade {
		0%,
		100% {
			opacity: 0;
		}
		50% {
			opacity: 1;
		}
	}

	@keyframes steamTransform {
		0% {
			transform: translate3d(0, 0.5rem, 0) scale(0.9);
		}
		100% {
			transform: translate3d(-0.125rem, 0, 0) scale(1.1);
		}
	}

	.animate-steamRise {
		animation:
			steamFade 3s ease-in-out infinite,
			steamTransform 3s cubic-bezier(0.4, 0, 0.2, 1) infinite;
	}
}

@layer components {
	.prose {
		font-family:
			'Source Serif 4 Variable', ui-serif, Georgia, Cambria, 'Times New Roman',
			Times, serif;
	}

	.prose h1 {
		font-family:
			'Source Sans 3 Variable', ui-sans-serif, system-ui, sans-serif,
			'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
			'Noto Color Emoji';
		text-wrap: balance;
	}

	.prose h2 {
		font-family:
			'Source Sans 3 Variable', ui-sans-serif, system-ui, sans-serif,
			'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',
			'Noto Color Emoji';
		text-wrap: balance;
	}

	.prose code::before,
	.prose code::after {
		content: none;
	}
}

/*
	The default border color has changed to `currentColor` in Tailwind CSS v4,
	so we've added these compatibility styles to make sure everything still
	looks the same as it did with Tailwind CSS v3.

	If we ever want to remove these styles, we need to add an explicit border
	color utility to any element that depends on these defaults.
*/
@layer base {
	/* Base styles migrated from baseStylesPlugin in tailwind.config.ts */
	.dark {
		color-scheme: dark;
	}

	.light {
		color-scheme: light;
	}

	[id] {
		scroll-margin-top: 1rem; /* equivalent to theme('spacing[4]') */
	}

	/* Existing compatibility styles for v4 */
	*,
	::after,
	::before,
	::backdrop,
	::file-selector-button {
		border-color: var(--color-gray-200, currentColor);
	}

	html {
		overflow-y: scroll;
	}
	@supports (scrollbar-gutter: stable) {
		html {
			overflow-y: auto;
			scrollbar-gutter: stable;
		}
	}

	:root {
		--focus-outline-color-light: var(--color-teal-700);
		--focus-outline-color-dark: var(--color-teal-700);
		--focus-outline-color: var(--focus-outline-color-light);
		--focus-outline-offset: 2px;
		--focus-outline-style: solid;
		--focus-outline-width: 2px;
	}

	.dark {
		--focus-outline-color: var(--focus-outline-color-dark);
	}

	*:focus-visible {
		outline-width: var(--focus-outline-width);
		outline-style: var(--focus-outline-style);
		outline-color: var(--focus-outline-color);
		outline-offset: var(--focus-outline-offset);
	}

	@media (forced-colors: active) {
		*:focus-visible {
			outline-color: Highlight;
		}
	}
}
